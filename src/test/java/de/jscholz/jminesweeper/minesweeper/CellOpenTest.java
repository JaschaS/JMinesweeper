package de.jscholz.jminesweeper.minesweeper;

import org.junit.Assert;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.junit.runners.Parameterized;

import java.util.Arrays;
import java.util.Collection;
import java.util.HashSet;

@RunWith(Parameterized.class)
public class CellOpenTest {
    @Parameterized.Parameter()
    public CellState before;

    @Parameterized.Parameter(value = 1)
    public CellState after;

    @Parameterized.Parameter(value = 2)
    public int expectedSize;

    @Parameterized.Parameter(value = 3)
    public CellContent contentBefore;

    @Parameterized.Parameter(value = 4)
    public CellContent contentAfter;

    @Parameterized.Parameters(name = "{index}: testAdd({0}+{1}) = {2}")
    public static Collection<Object[]> data() {
        return Arrays.asList(new Object[][]{
                { CellState.UNDISCOVERED, CellState.OPEN, 1, CellContent.UNKNOWN, CellContent.EMPTY },
                { CellState.FLAGGED, CellState.FLAGGED, 0, CellContent.UNKNOWN, CellContent.UNKNOWN },
                { CellState.OPEN, CellState.OPEN, 0, CellContent.EMPTY, CellContent.EMPTY }
        });
    }

    @Test
    public void openTest() {
        final Cell c = new Cell();
        c.setState(before);

        final HashSet<ICell> openedCells = new HashSet<>();

        Assert.assertEquals(before, c.getCellState());
        Assert.assertEquals(contentBefore, c.getCellContent());
        c.open(openedCells);
        Assert.assertEquals(after, c.getCellState());
        Assert.assertEquals(contentAfter, c.getCellContent());
        Assert.assertEquals(expectedSize, openedCells.size());
    }
}
